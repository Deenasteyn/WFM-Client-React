{"version":3,"sources":["Logout.tsx","Managers/Home.tsx","Redux/HOC/MangerHOC.tsx","WFM/Home.tsx","Redux/HOC/WfmManagerHOC.tsx","ProtectedRoute.tsx","Login.tsx","Redux/HOC/LoginHOC.tsx","App.tsx","Redux/saga/handlers.js","Redux/saga/root.js","Redux/store/store.js","Redux/reducers/reducer.js","index.tsx"],"names":["Logout","localStorage","clear","href","className","ManagerHome","employeeData","getEmployee","updatelockstatus","useEffect","useState","message","setmessage","console","log","map","x","Name","Experience","Skills","Manager","trigger","xmlns","width","height","fill","viewBox","d","modal","close","id","onClick","value","name","onChange","e","target","type","EmployeeId","connect","state","dispatch","bindActionCreators","employee_id","data","WFMHome","employeeRequestData","getEmployeeRequest","updateEmployeeStatus","status","setstatus","ReqDate","wfm_manager","ReqMessage","ProtectedRoute","children","rest","token","getItem","usertype","render","location","MangerHOC","WfmManagerHOC","to","pathname","from","Login","performLogin","user","setUser","pass","setPass","style","minHeight","position","top","left","padding","color","action","placeholder","username","password","loginData","App","path","LoginHOC","exact","loginHandler","managerHandler","wfmManagerHandler","call","axios","post","result","setItem","put","requestmessage","get","manager","rootSaga","takeEvery","appData","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e45af13e.chunk.js","sourcesContent":["const Logout=()=>{  \r\n    localStorage.clear()\r\n    return(\r\n        <a href='/login' className=\"btn btn-default btn-sm\">\r\n        <span className=\"fa fa-sign-out\"></span> Log out</a>\r\n    )\r\n}\r\n\r\nexport default Logout;","import Logout from \"../Logout\"\n// import axios from \"axios\"\nimport { useEffect,useState } from \"react\"\nimport React from 'react';\nimport Popup from 'reactjs-popup';\nimport 'reactjs-popup/dist/index.css';\nimport '../modaltest.css'\n\n\ntype Employee={\nEmployeeId:number;\nName: number; \nSkills:string; \nExperience: number;\nManager:string\n \n}\ntype emp={\n    employeeData:[];\n    getEmployee:()=>{};\n    updatelockstatus:(employee_id:number,message:string)=>{};\n}\n\n\n const ManagerHome=({employeeData,getEmployee,updatelockstatus}:emp)=>{\n\n    useEffect(()=>{\n    getEmployee()\n    }  ,[]    \n    )\n    \n     const [message,setmessage] =useState('')\n    console.log(employeeData)\n    return (\n        <>\n        <h1>Managers Home</h1>\n\n        <Logout></Logout>\n        <table className=\"table\">\n                <thead>\n                    <tr key='2342'>\n                    <th>Name</th>\n                    <th>Experience</th>\n                    <th>Skills</th>\n                    <th>Manager</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        employeeData.map((x:Employee)=>{\n                        return(\n                            <tr key={x.EmployeeId}>\n                                <td>{x.Name}</td>\n                                <td>{x.Experience}</td>\n                                <td>{x.Skills}</td>\n                                <td>{x.Manager}</td>\n                                <td>\n\n                                {/* <button className=\"btn btn-primary\" onClick={()=>{updatelockstatus(x.EmployeeId)}}>                               \n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-lock-fill\" viewBox=\"0 0 16 16\">\n                                <path d=\"M8 1a2 2 0 0 1 2 2v4H6V3a2 2 0 0 1 2-2zm3 6V3a3 3 0 0 0-6 0v4a2 2 0 0 0-2 2v5a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2z\"/>\n                                </svg>\n                                Request Lock </button> */}\n                                  <Popup trigger={<button className=\"btn btn-primary\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-lock-fill\" viewBox=\"0 0 16 16\">\n                                <path d=\"M8 1a2 2 0 0 1 2 2v4H6V3a2 2 0 0 1 2-2zm3 6V3a3 3 0 0 0-6 0v4a2 2 0 0 0-2 2v5a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2z\"/>\n                                </svg> Request Lock </button>} modal>\n                                         {(close:any) => (  \n                                                 <div>\n                                           \n                                                    <div className=\"modal-content\">            \n                                                        <div className=\"modal-header\">\n                                                            <h5 className=\"modal-title\" id=\"exampleModalLongTitle\">SOFT LOCK REQUEST CONFIRMATION</h5>   \n                                                            <button className=\"close\" onClick={close}>\n                                                        \n                                                                </button>                           \n                                                        </div>\n                                                    <div className=\"modal-body\">\n                                                        {/* <form onSubmit={(e)=>{console.log(e.target.value);updatelockstatus(x.EmployeeId)}}> */}\n                                                         Please confirm the lock request for <b>{x.Name}</b>\n                                                         <br>\n                                                         </br>\n                                                         Request Message(Message must be 10 char long)\n                                                         <br></br>\n                                                         <input value={message} name='reqmessage' onChange={(e)=>{setmessage(e.target.value)} }></input>\n                                                        <br></br>\n                                                        <br></br> \n                                                        <div className=\"modal-footer\">\n                                                        \n                                                            <button type=\"button\" className=\"btn btn-secondary\" onClick={()=>{close()}}>Close</button>\n                                                            <button type=\"button\" className=\"btn btn-primary\" onClick={()=>{updatelockstatus(x.EmployeeId,message)}}>Send Request</button>\n                                                        \n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                </div>\n                                                        )}\n                                </Popup>\n                                </td>\n                            </tr>\n                        )\n                        })\n                    }\n                </tbody>\n        </table>\n        </>\n    )\n}\n\nexport default ManagerHome","import {connect} from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport ManagerHome from '../../Managers/Home';\r\n\r\nexport default connect(\r\n    (state:any)=>{\r\n        return {\r\n           employeeData:state.employeeData.employeeData\r\n        }\r\n    },\r\n    (dispatch)=>{\r\n        return bindActionCreators({\r\n            getEmployee:()=>{\r\n                return {type:\"Action\"}\r\n            },updatelockstatus:(employee_id,message)=>{\r\n                console.log('called hoc')\r\n                console.log(employee_id)\r\n                return {type:\"Update\",data:{employee_id:employee_id,message:message}}\r\n            }\r\n        },dispatch)\r\n    }\r\n)(ManagerHome)","import Logout from \"../Logout\"\n// import axios from \"axios\"\nimport { useEffect,useState } from \"react\"\nimport React from 'react';\nimport Popup from 'reactjs-popup';\nimport 'reactjs-popup/dist/index.css';\n\n\ntype Employee={\n\n    EmployeeId:number,\n\n    Manager:string,\n\n    wfm_manager:string,\n\n    ReqDate:Date,\n\n    ReqMessage:string\n \n}\ntype emp={\n    employeeRequestData:[];\n    getEmployeeRequest:()=>{};\n    updateEmployeeStatus:(employee_id:number,message:string)=>{};\n}\n\n const WFMHome=({employeeRequestData,getEmployeeRequest,updateEmployeeStatus}:emp)=>{\n\n    useEffect(()=>{\n        getEmployeeRequest()\n    }  ,[]    \n    )\n    \n    const [status,setstatus]=useState('') \n\n    return (\n        <>\n        <h1>WFM Home</h1>\n        <Logout></Logout>\n        <table className=\"table\">\n                <thead>\n                    <tr>\n                    <th>Employee ID</th>\n                    <th>Requestee</th>\n                    <th>Requested Date</th>\n                    <th>WFM Manager</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        employeeRequestData.map((x:Employee)=>{\n                        return(\n                            <tr key={x.EmployeeId}>\n                                <td>{x.EmployeeId}</td>\n                                <td>{x.Manager}</td>\n                                <td>{x.ReqDate}</td>\n                                <td>{x.wfm_manager}</td>\n                                <td>\n\n                                {/* <button className=\"btn btn-primary\" onClick={()=>{updatelockstatus(x.EmployeeId)}}>                               \n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-lock-fill\" viewBox=\"0 0 16 16\">\n                                <path d=\"M8 1a2 2 0 0 1 2 2v4H6V3a2 2 0 0 1 2-2zm3 6V3a3 3 0 0 0-6 0v4a2 2 0 0 0-2 2v5a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2z\"/>\n                                </svg>\n                                Request Lock </button> */}\n                                  <Popup trigger={<button className=\"btn btn-primary\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-lock-fill\" viewBox=\"0 0 16 16\">\n                                <path d=\"M8 1a2 2 0 0 1 2 2v4H6V3a2 2 0 0 1 2-2zm3 6V3a3 3 0 0 0-6 0v4a2 2 0 0 0-2 2v5a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2z\"/>\n                                </svg> Request Lock </button>} modal>\n                                            <div>\n                                           \n                                                    <div className=\"modal-content\">            \n                                                        <div className=\"modal-header\">\n                                                            <h5 className=\"modal-title\" id=\"exampleModalLongTitle\">SOFT LOCK REQUEST CONFIRMATION</h5>                              \n                                                        </div>\n                                                    <div className=\"modal-body\">\n                                                        <p>Employee ID</p>{x.EmployeeId}\n                                                        <br></br>\n                                                        <p>Requestee</p>{x.Manager}\n                                                        <br></br>\n                                                        <p>Employee Manager</p>{x.wfm_manager}\n                                                        <br></br>\n                                                        <p>Request Description</p>{x.ReqMessage}\n                                                        <br></br>\n                                                        <p>Status</p>   {status}                                                     \n                                                        <select onChange={(e)=>{setstatus(e.target.value)}}>\n                                                            <option key={0}></option>\n                                                            <option key={1}>Approve</option>\n                                                            <option key={2}>Reject</option>\n                                                        </select>\n                                                        <div className=\"modal-footer\">\n                                                            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                                                            <button type=\"button\" className=\"btn btn-primary\" onClick={()=>{updateEmployeeStatus(x.EmployeeId,status)}}>Send Request</button>\n                                                         </div>\n                                                        \n                                                    </div>\n                                                </div>\n                                                </div>\n                                        \n                                </Popup>\n                                </td>\n                            </tr>\n                        )\n                        })\n                    }\n                </tbody>\n        </table>\n        </>\n    )\n}\n\nexport default WFMHome","import {connect} from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport  WFMHome from '../../WFM/Home'\r\n\r\nexport default connect(\r\n    (state:any)=>{\r\n        return {\r\n            employeeRequestData:state.employeeRequestData.employeeRequestData\r\n        }\r\n    },\r\n    (dispatch)=>{\r\n        return bindActionCreators({\r\n            getEmployeeRequest:()=>{\r\n                return {type:\"Wfm_Action\"}\r\n            },updateEmployeeStatus:(employee_id,status)=>{\r\n                console.log(employee_id,status)\r\n                return {type:\"UpdateEmployeeRequest\",data:{employee_id:employee_id,status:status}}\r\n            }\r\n        },dispatch)\r\n    }\r\n)(WFMHome)","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport MangerHOC from \"./Redux/HOC/MangerHOC\";\nimport WfmManagerHOC from \"./Redux/HOC/WfmManagerHOC\";\n\n\n\nconst ProtectedRoute = ({ children, ...rest }:any) => {\n  const token= localStorage.getItem(\"token\");\n  const usertype =  localStorage.getItem(\"usertype\")\n\n  console.log(token,'token')\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n      token? usertype===\"manager\"?(<MangerHOC/>):(<WfmManagerHOC />) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n};\nexport default ProtectedRoute;\n","import { useState,useEffect } from \"react\"\nimport { Redirect } from \"react-router\";\n\n\n\nconst Login = ({performLogin}:any)=>{\n\n  const [user,setUser]=useState(\"\")\n  const [pass,setPass]=useState(\"\")\n  console.log('Karthika G')\n  console.log(localStorage.getItem(\"token\"),'Abi token')\n  if (localStorage.getItem(\"token\")) \n  {\n    console.log('Rendereeeeeddddddddd')\n    return <Redirect to=\"/home\" />;\n  }\n    return (\n  <div className=\"card\" \n  style={{width: \"400px\", minHeight: \"300px\",position: \"relative\", top:\"100px\",left:\"35%\" \n  ,padding: \"20px\", color:\"darkblue\"}}>\n    <h3> Work Force Management </h3>\n        <form action=\"/action_page.php\">\n  <div className=\"mb-3 mt-3\">\n \n    <input type=\"text\" className=\"form-control\" \n    value={user}\n    placeholder=\"username\"\n     onChange={(x:any)=>setUser(x.target.value)}\n     />\n  </div>\n  <div className=\"mb-3\">\n  \n    <input type=\"password\" \n    className=\"form-control\"\n     value={pass}\n     onChange={(x:any)=>setPass(x.target.value)}\n    placeholder=\"password\"\n    name=\"pswd\"/>\n  </div>\n \n  <button type=\"button\" className=\"btn btn-primary\" onClick={()=>performLogin({\n    username:user,password:pass\n  })}>Login</button>\n</form>\n</div>\n    )\n}\n\nexport default Login","import {connect} from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport Login from '../../Login';\n\nexport default connect(\n    (state:any)=>{\n        return {\n            token: state.loginData.token,\n            usertype: state.loginData.usertype,\n            username:state.loginData.username\n        }\n    },\n    (dispatch)=>{\n        return bindActionCreators({\n            performLogin:(user:any)=>{\n                return {type: \"LOGIN_ACTION\",data:user}\n            }\n        },dispatch)\n    }\n)(Login)","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {BrowserRouter as Router,Route,Switch,Redirect} from 'react-router-dom'\nimport ProtectedRoute from './ProtectedRoute';\nimport LoginHOC from './Redux/HOC/LoginHOC';\n\nconst App=()=>{\n     return(\n    <Router>\n      <Switch>\n        <Route path=\"/login\">\n          <LoginHOC/>\n        </Route>\n        {/* */}\n         <Route exact path=\"/home\">\n         <ProtectedRoute/> \n        </Route>\n\n        <Route path=\"*\">\n          <Redirect exact from=\"/\" to=\"home\" />\n        </Route>\n      </Switch>\n    </Router>\n     )\n}\nexport default App;\n","import axios from 'axios'\nimport {call,put} from 'redux-saga/effects'\n\n\nexport function* loginHandler(action){\n    try{\n let  result = yield call(axios.post,\"http://localhost:8000/users/signin\",action.data)\n console.log(result.data)\n\n localStorage.setItem(\"username\",result.data.username)\n localStorage.setItem(\"usertype\",result.data.usertype)\n localStorage.setItem(\"token\",result.data.token)\n\n yield put({type:\"LOGIN_SUCCESS\",data: \n  {\n     username:result.data.username,\n     usertype:result.data.usertype,\n     token: result.data.token\n  }})\n    } \n  catch(e){\n      yield put({type:\"LOGIN_FAILURE\"})\n  }\n \n}\n\n\nexport function* managerHandler(action){\n  console.log('Called here')   \n  if (action.type===\"Update\")\n  {\n    console.log(\"EmployeeId\")\n    console.log(action)\n    try{\n      let  result = yield call(axios.post,\"http://localhost:8000/users/updateStatus\",{employee_id:action.data.employee_id,requestmessage:action.data.message})\n      console.log(result)\n\n        } \n      catch(e){\n          yield put({type:\"FAILURE\"})\n      }\n  } \n  if (action.type===\"Action\")\n  {\n  try{\n    console.log(localStorage.getItem('usertype'))\n    let  result = yield call(axios.get,\"http://localhost:8000/users/manager\",{manager:localStorage.getItem('username')})\n    console.log(result.data)\n    \n    yield put({type:\"LOAD_EMPLOYEE\",data: result.data})\n      } \n    catch(e){\n        yield put({type:\"FAILURE\"})\n    }\n  } \n  \n}\n\nexport function* wfmManagerHandler(action){\n  console.log('Called here 60')   \n   \n  if (action.type===\"Wfm_Action\")\n  {\n  try{\n    \n    let  result = yield call(axios.get,\"http://localhost:8000/users/wfm_manager\")\n    console.log(result.data)\n    yield put({type:\"LOAD_EMPLOYEEREQUEST\",data: result.data})\n      } \n    catch(e){\n        yield put({type:\"FAILURE\"})\n    }\n  } \n\n  if (action.type===\"UpdateEmployeeRequest\")\n  {\n    console.log(\"EmployeeId\")\n    console.log(action)\n    try{\n      let  result = yield call(axios.post,\"http://localhost:8000/users/updateApprovalStatus\",{employee_id:action.data.employee_id,status:action.data.status})\n      console.log(result)\n      yield put({type:\"LOAD_EMPLOYEEREQUEST\",data: result.data})\n        } \n      catch(e){\n          yield put({type:\"FAILURE\"})\n      }\n  }\n  \n}\n","import {takeEvery} from 'redux-saga/effects'\nimport { loginHandler,managerHandler,wfmManagerHandler } from './handlers'\n\n\nexport function* rootSaga(){\n    yield takeEvery(\"LOGIN_ACTION\",loginHandler)\n    yield takeEvery(\"Action\",managerHandler)\n    yield takeEvery(\"Update\",managerHandler)\n    yield takeEvery(\"Wfm_Action\",wfmManagerHandler)\n    yield takeEvery(\"UpdateEmployeeRequest\",wfmManagerHandler)\n\n\n}","import {combineReducers,applyMiddleware,createStore} from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport { loginReducer, managerReducer, wfmManagerReducer } from '../reducers/reducer'\nimport { rootSaga } from '../saga/root'\n\n\n\nconst appData = combineReducers({\n    loginData: loginReducer,\n    employeeData:managerReducer,\n    employeeRequestData:wfmManagerReducer\n})\n\nconst sagaMiddleware=createSagaMiddleware()\nexport const store=createStore(appData,applyMiddleware(sagaMiddleware))\nsagaMiddleware.run(rootSaga)\n\n","\nexport const loginReducer=(state={username:\"NA\",token:\"NA\",usertype:\"NA\"},action)=>{\n    switch(action.type){\n        case \"LOGIN_SUCCESS\":\n            console.log('Logiin_success')\n            console.log(action.data)\n            return {...action.data};\n        case \"LOGIN_FAILURE\":\n            console.log(action)\n            return {...state,message:\"Login Credentials incorrect\"}\n        default:\n            return state\n    }\n}\n\n\nexport const managerReducer=(state={employeeData:[]},action)=>{\n    switch(action.type){\n        case \"LOAD_EMPLOYEE\":\n            return {employeeData:action.data};\n        default:\n                 return state;\n}\n}\n\nexport const wfmManagerReducer=(state={employeeRequestData:[]},action)=>{\n    switch(action.type){\n        case \"LOAD_EMPLOYEEREQUEST\":\n            return {employeeRequestData:action.data};\n        default:\n                 return state;\n}\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/bootstrap/dist/js/bootstrap.min';\nimport { Provider } from 'react-redux';\nimport { store } from './Redux/store/store';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store} >\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}